const flashcards = [ { question: "Yearly price increase for a standard SIM only plan?", answer: "+£1.50", options: ["+£1.00", "+£1.50", "+£2.00", "+£2.50"] }, { question: "Out-of-bundle charge for an SMS text message to a UK mobile number?", answer: "21p per message", options: ["15p per message", "20p per message", "21p per message", "25p per message"] }, { question: "Out-of-bundle charge per minute for a call to a UK landline?", answer: "93p per minute", options: ["80p per minute", "90p per minute", "93p per minute", "£1.00 per minute"] }, { question: "Yearly price increase for a handset with a subsidy?", answer: "+£4", options: ["+£3", "+£3.50", "+£4", "+£4.50"] }, { question: "Out-of-bundle charge per MMS for a picture message?", answer: "93p per MMS", options: ["80p per MMS", "90p per MMS", "93p per MMS", "£1.00 per MMS"] }, { question: "Out-of-bundle charge per minute for retrieving voicemail?", answer: "93p per minute", options: ["80p per minute", "90p per minute", "93p per minute", "£1.00 per minute"] }, { question: "Yearly price increase for Home Broadband?", answer: "+£3", options: ["+£2", "+£2.50", "+£3", "+£3.50"] }, { question: "What is the daily charge for using your UK allowance in the EU (for newer tariffs)?", answer: "£2.59", options: ["£2.00", "£2.50", "£2.59", "£3.00"] }, { question: "Yearly price increase for TV?", answer: "+£2", options: ["+£1", "+£1.50", "+£2", "+£2.50"] }, { question: "Out-of-bundle charge for service charges?", answer: "Access Charge of 93p per minute plus a Service Charge", options: ["40p per minute", "50p per minute", "Access Charge of 93p per minute plus a Service Charge", "£1.00 per minute plus a service charge"] }, { question: "Out-of-bundle charge for calls to UK mobile numbers?", answer: "93p per minute", options: ["80p per minute", "90p per minute", "93p per minute", "£1.00 per minute"] }, { question: "Out-of-bundle charge for calls to retrieve voicemail?", answer: "93p per minute", options: ["80p per minute", "90p per minute", "93p per minute", "£1.00 per minute"] }, ]; let currentCardIndex = 0; let score = 0; let userName = "User"; // Default user name // Get elements const startGameButton = document.getElementById("start-game-button"); const nameInput = document.getElementById("name-input"); const loginContainer = document.getElementById("login-container"); const gameContainer = document.getElementById("game-container"); const questionDisplay = document.getElementById('question-display'); const answerOptionsContainer = document.getElementById('answer-options'); const nextButton = document.getElementById('next-button'); const resultContainer = document.getElementById('result-container'); const finalScoreDisplay = document.getElementById('final-score-display'); const percentageDisplay = document.getElementById('percentage-display'); const passFailDisplay = document.getElementById('pass-fail-display'); const userNameDisplay = document.getElementById('user-name-display'); // Event Listeners startGameButton.addEventListener("click", () => { if (!nameInput.value.trim()) { alert("Please enter your name before starting the game."); return; } userName = nameInput.value.trim(); loginContainer.style.display = "none"; gameContainer.style.display = "block"; displayCard(); }); function displayCard() { const card = flashcards[currentCardIndex]; questionDisplay.textContent = card.question; answerOptionsContainer.innerHTML = ''; userNameDisplay.textContent = `Your Name: ${userName}`; card.options.forEach(option => { const button = document.createElement('button'); button.textContent = option; button.className = 'answer-option'; button.dataset.answer = option; button.addEventListener('click', () => handleAnswerSelection(option, option === card.answer)); answerOptionsContainer.appendChild(button); }); nextButton.style.display = 'none'; nextButton.disabled = true; } function handleAnswerSelection(selectedAnswer, isCorrect) { const answerButtons = document.querySelectorAll('.answer-option'); answerButtons.forEach(button => { button.disabled = true; if (isCorrect) { button.classList.add('correct-answer'); } else { button.classList.add('incorrect-answer'); } }); if (isCorrect) { score++; } currentCardIndex++; if (currentCardIndex < flashcards.length) { nextButton.style.display = 'block'; nextButton.disabled = false; nextButton.onclick = displayCard; } else { endGame(); } } function endGame() { gameContainer.innerHTML = ""; const percentage = (score / flashcards.length) * 100; const resultContainer = document.createElement('div'); resultContainer.innerHTML = "<h2>Result</h2>"; resultContainer.innerHTML += `<p>Percentage: ${percentage.toFixed(2)}%</p>`; if (percentage >= 90) { resultContainer.innerHTML += `<p>Result: Pass, ${userName}</p>`; } else { resultContainer.innerHTML += `<p>Result: Fail, ${userName}</p>`; } gameContainer.appendChild(resultContainer); } </script> </body> </html>